[{"C:\\Users\\Samuel\\Documents\\1-Projects\\RCA-Bryson\\node-auth-heroku\\client\\src\\index.js":"1","C:\\Users\\Samuel\\Documents\\1-Projects\\RCA-Bryson\\node-auth-heroku\\client\\src\\App.js":"2","C:\\Users\\Samuel\\Documents\\1-Projects\\RCA-Bryson\\node-auth-heroku\\client\\src\\components\\Signup\\index.js":"3","C:\\Users\\Samuel\\Documents\\1-Projects\\RCA-Bryson\\node-auth-heroku\\client\\src\\components\\Messages\\index.js":"4","C:\\Users\\Samuel\\Documents\\1-Projects\\RCA-Bryson\\node-auth-heroku\\client\\src\\components\\Login\\index.js":"5","C:\\Users\\Samuel\\Documents\\1-Projects\\RCA-Bryson\\node-auth-heroku\\client\\src\\components\\Messages\\UserThreads\\index.js":"6"},{"size":313,"mtime":1606873892063,"results":"7","hashOfConfig":"8"},{"size":2412,"mtime":1607774085359,"results":"9","hashOfConfig":"8"},{"size":3689,"mtime":1607330048001,"results":"10","hashOfConfig":"8"},{"size":3172,"mtime":1607809340445,"results":"11","hashOfConfig":"8"},{"size":3387,"mtime":1607745213936,"results":"12","hashOfConfig":"8"},{"size":904,"mtime":1607774085360,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"yhw4pk",{"filePath":"17","messages":"18","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"16"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},"C:\\Users\\Samuel\\Documents\\1-Projects\\RCA-Bryson\\node-auth-heroku\\client\\src\\index.js",[],["31","32"],"C:\\Users\\Samuel\\Documents\\1-Projects\\RCA-Bryson\\node-auth-heroku\\client\\src\\App.js",["33","34","35","36"],"import React, {useState, useEffect } from \"react\";\r\nimport { BrowserRouter, Switch, Route, Link, Redirect } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\n// import User from \"./components/User\";\r\n\r\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\nimport './App.css';\r\nimport logo from \"./images/logo.png\";\r\n\r\n\r\nimport Login from \"./components/Login\";\r\nimport SignUp from \"./components/Signup\";\r\nimport Messages from \"./components/Messages\";\r\n\r\nfunction App() {\r\n\r\n  const [token, setToken] = useState(\"\");\r\n\r\n  // const [users, setUsers] = useState(false);\r\n\r\n  // useEffect( () => {\r\n  //   (async () => {\r\n  //     const users = await axios(\"http://localhost:5000/api\");\r\n  //     setUsers(users.data);\r\n  //   })();\r\n  // },[])\r\n\r\n  return (\r\n    <BrowserRouter>\r\n\r\n      <div className=\"App\">\r\n\r\n        <nav className=\"navbar navbar-expand-sm navbar-light fixed-top\">\r\n          <div className=\"container\">\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\r\n              <ul className=\"navbar-nav ml-auto\">\r\n                <li className=\"nav-item\">\r\n                  <Link className=\"nav-link\" to={\"/sign-in\"}>Login</Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <Link className=\"nav-link\" to={\"/sign-up\"}>Sign Up</Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <Link className=\"nav-link\" to={\"/userthreads\"}>Messages</Link>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n\r\n        <content className=\"main\">\r\n              <Switch>\r\n                <Route path=\"/userthreads\">\r\n                  <Messages token={ token } />\r\n                </Route>\r\n                <Route exact path=\"/\">\r\n                {\r\n                  (token === \"\") ? <Login setToken={ setToken } /> : <Messages token={ token } />\r\n                }                  \r\n                </Route>\r\n                <Route path=\"/sign-in\">\r\n                {\r\n                  (token === \"\") ? <Login setToken={ setToken } /> : <Messages token={ token } />\r\n                }                  \r\n                </Route>\r\n                <Route path=\"/sign-up\">\r\n                  <SignUp/>\r\n                </Route>\r\n              </Switch>\r\n        </content>\r\n\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Samuel\\Documents\\1-Projects\\RCA-Bryson\\node-auth-heroku\\client\\src\\components\\Signup\\index.js",[],"C:\\Users\\Samuel\\Documents\\1-Projects\\RCA-Bryson\\node-auth-heroku\\client\\src\\components\\Messages\\index.js",["37"],"import React, { useState, useEffect } from 'react';\r\nimport { Redirect, useLocation, Link } from 'react-router-dom';\r\nimport axios from \"axios\";\r\n\r\nimport UserThreads from \"./UserThreads\";\r\n\r\nimport logo from \"../../images/logo.png\";\r\nimport \"./messages.css\";\r\n\r\nconst Messages = ({token}) => {\r\n\r\n    const [threads, setThreads] = useState([]);\r\n    const [conversation, setConversation] = useState([]);\r\n\r\n\r\n    // useEffect( () => {\r\n    //     const fetchData = async () => {\r\n    //         const response = await axios.get(\"http://localhost:5000/messages\", { headers: {\"auth-token\": token }});\r\n    //         setThreads(response.data);\r\n    //     }\r\n    //     fetchData();        \r\n    // },[token]);\r\n\r\n    useEffect( () => {\r\n        let isSubscribed = true;\r\n        const fetchData = async () => {\r\n            await axios.get(\"http://localhost:5000/messages\", { headers: {\"auth-token\": token }})\r\n                        .then(response => isSubscribed ? setThreads(response.data) : null)\r\n                        .catch(error => {\r\n                            if(isSubscribed) {\r\n                                console.log(error);\r\n                            }\r\n                        })\r\n        }\r\n        fetchData();       \r\n\t\treturn () => (isSubscribed = false); \r\n    },[token]);\r\n\r\n    const getConvo = async (userId) => {\r\n        console.log(userId);\r\n        console.log(token);\r\n        // await axios.post(\"http://localhost:5000/messages/u-convo\",{ headers: {\"auth-token\": token}, data: { \"partner\": userId } })\r\n        await axios({method: \"POST\", url: \"http://localhost:5000/messages/u-convo\" , headers: {\"auth-token\": token}, data: { \"partner\": userId } })\r\n                    .then(response => {\r\n                        setConversation(response.data);\r\n                        console.log(response.data);\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(`This is the error...${error}`);\r\n                    })\r\n    }\r\n\r\n    let location = useLocation();\r\n    return (token === \"\") ?  <Redirect to={{pathname: \"/sign-in\",state: { from: location }}}/> :\r\n    ( \r\n        <div className=\"message-board\">\r\n\r\n            <div className=\"sidenav\">\r\n                <img src={logo} alt=\"logo\" width=\"25%\" />\r\n                <UserThreads threads={threads} getConvo={getConvo} />\r\n            </div>\r\n\r\n            <div className=\"auth-wrapper\">\r\n                <div className=\"auth-inner\">\r\n                    <h3>Messages</h3>\r\n                    {\r\n                        (conversation.length === 0) ? (<h3>loading...</h3>) : \r\n                        (\r\n                            <div className=\"message-thread\">\r\n                                {\r\n                                    conversation.map( v => {\r\n                                        return <div className=\"single-message-block\">@{v.date} \"{v.body}\"</div>\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Messages;","C:\\Users\\Samuel\\Documents\\1-Projects\\RCA-Bryson\\node-auth-heroku\\client\\src\\components\\Login\\index.js",["38"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport axios from \"axios\";\r\nimport { Link, Redirect, useLocation } from \"react-router-dom\";\r\n\r\nimport logo from \"../../images/logo.png\";\r\n\r\nconst Login = ({ setToken }) => {\r\n    \r\n    const [emailInput, setEmailInput] = useState(\"\");\r\n    const [passwordInput, setPasswordInput] = useState(\"password1\");\r\n    const [loginStatus, setLoginStatus] = useState(false);\r\n    const [loginMessage, setLoginMessage] = useState(\"\");\r\n\r\n    const submitLogin = async (e) => {\r\n        e.preventDefault();\r\n\r\n        let dbUrl = \"http://localhost:5000/login\";\r\n\r\n        try {\r\n            let status = await axios.post(\r\n                dbUrl, \r\n                {\r\n                    username: emailInput.toLowerCase(),\r\n                    password: passwordInput,\r\n                }\r\n            );\r\n            setToken(status.data);\r\n            setLoginStatus(true);\r\n            setLoginMessage(\"\");\r\n        } \r\n        catch {\r\n            setLoginStatus(false);\r\n            setLoginMessage(\"ACCESS DENIED\");\r\n        }\r\n    };\r\n\r\n    let location = useLocation();\r\n    return (loginStatus) ? <Redirect to={{pathname: \"/messages\",state: { from: location }}}/> : \r\n    (\r\n    <div className=\"auth-wrapper\">\r\n        <div className=\"auth-inner\">\r\n            <form>\r\n                <center>\r\n                <h3>Log In</h3>\r\n                {loginMessage}\r\n                <br />\r\n                <img src={logo} alt=\"logo\" width=\"50%\" />\r\n                </center>\r\n                <div className=\"form-group\">\r\n                <label>Email address</label>\r\n                <input\r\n                    type=\"email\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Enter email\"\r\n                    value={emailInput}\r\n                    onChange={(e) => setEmailInput(e.target.value)}\r\n                />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                <label>Password</label>\r\n                <input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Enter password\"\r\n                    value={passwordInput}\r\n                    onChange={(e) => setPasswordInput(e.target.value)}\r\n                />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                <div className=\"custom-control custom-checkbox\">\r\n                    <input\r\n                    type=\"checkbox\"\r\n                    className=\"custom-control-input\"\r\n                    id=\"customCheck1\"\r\n                    />\r\n                    <label className=\"custom-control-label\" htmlFor=\"customCheck1\">\r\n                    Remember me\r\n                    </label>\r\n                </div>\r\n                </div>\r\n                <button\r\n                type=\"submit\"\r\n                className=\"btn btn-primary btn-block\"\r\n                onClick={(e) => submitLogin(e)}\r\n                >\r\n                Submit\r\n                </button>\r\n            </form>\r\n            <p className=\"forgot-password text-right\">\r\n                Forgot <a href=\"/forgot\">password?</a>\r\n            </p>\r\n            <p className=\"forgot-password text-right\">\r\n                <Link to=\"/sign-up\">Register Now</Link>\r\n            </p>\r\n        </div>\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\Samuel\\Documents\\1-Projects\\RCA-Bryson\\node-auth-heroku\\client\\src\\components\\Messages\\UserThreads\\index.js",["39","40"],"import React, {useState, useEffect} from 'react';\r\n\r\nconst UserThreads = ({threads, getConvo}) => {\r\n\r\n    // const [selectedName, setSelectedName] = useState(\"\");\r\n    // const [selectedId, setSelectedId] = useState(\"\");\r\n\r\n\r\n    const handleClick = (e) => {\r\n        // setSelectedName(e.target.innerHtml);\r\n        // setSelectedId(e.target.id);\r\n        console.log(`clicked on user ${e.target.id}`);\r\n        getConvo(e.target.id);\r\n    }\r\n\r\n//   useEffect( () => {\r\n//       if (selectedId !== \"\") getConvo(selectedId);\r\n//   },[selectedId])\r\n\r\n    return ( \r\n        <React.Fragment>\r\n            { \r\n                threads.map((user, i) => {\r\n                    return user ? <div className=\"message-body\" key={i} id={user._id} onClick={(e) => handleClick(e)}>{user.name}</div> : <></>;\r\n                })\r\n            }\r\n\r\n        </React.Fragment>\r\n     );\r\n}\r\n \r\nexport default UserThreads;",{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":1,"column":26,"nodeType":"47","messageId":"48","endLine":1,"endColumn":35},{"ruleId":"45","severity":1,"message":"49","line":2,"column":46,"nodeType":"47","messageId":"48","endLine":2,"endColumn":54},{"ruleId":"45","severity":1,"message":"50","line":3,"column":8,"nodeType":"47","messageId":"48","endLine":3,"endColumn":13},{"ruleId":"45","severity":1,"message":"51","line":9,"column":8,"nodeType":"47","messageId":"48","endLine":9,"endColumn":12},{"ruleId":"45","severity":1,"message":"52","line":2,"column":33,"nodeType":"47","messageId":"48","endLine":2,"endColumn":37},{"ruleId":"45","severity":1,"message":"46","line":1,"column":27,"nodeType":"47","messageId":"48","endLine":1,"endColumn":36},{"ruleId":"45","severity":1,"message":"53","line":1,"column":16,"nodeType":"47","messageId":"48","endLine":1,"endColumn":24},{"ruleId":"45","severity":1,"message":"46","line":1,"column":26,"nodeType":"47","messageId":"48","endLine":1,"endColumn":35},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'axios' is defined but never used.","'logo' is defined but never used.","'Link' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]